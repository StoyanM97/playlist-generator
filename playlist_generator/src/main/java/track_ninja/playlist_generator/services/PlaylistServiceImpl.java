package track_ninja.playlist_generator.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import track_ninja.playlist_generator.models.Playlist;
import track_ninja.playlist_generator.exceptions.NoGeneratedPlaylistsException;
import track_ninja.playlist_generator.repositories.PlaylistRepository;


@Service
public class PlaylistServiceImpl implements PlaylistService{
    private static final String NO_PLAYLISTS_GENERATED_ERROR_MESSAGE = "No playlists generated!";
    private static final String NO_PLAYLISTS_GENERATED_BY_THIS_USER_ERROR_MESSAGE = "No playlists generated by this user!";
    private static final String NO_PLAYLISTS_GENERATED_WITH_SUCH_TITLE_ERROR_MESSAGE = "No playlists generated with such title!";

    private PlaylistRepository playlistRepository;

    @Autowired
    public PlaylistServiceImpl(PlaylistRepository playlistRepository) {
        this.playlistRepository = playlistRepository;
    }


    @Override
    public Iterable<Playlist> getAll() {
        Iterable<Playlist> playlists = playlistRepository.findAllByIsDeletedFalse();
        if (!playlists.iterator().hasNext()) {
            throw new NoGeneratedPlaylistsException(NO_PLAYLISTS_GENERATED_ERROR_MESSAGE);
        }
        return playlists;
    }

    @Override
    public Iterable<Playlist> getByGenre(String genre) {
        //return playlistRepository.findPlaylistsByIsDeletedFalseAndGenresContaining_Name(genre);
        return null;
    }

    @Override
    public Iterable<Playlist> getByUser(String username) {
        Iterable<Playlist> playlists = playlistRepository.findAllByIsDeletedFalseAndUser_User_Username(username);
        if (!playlists.iterator().hasNext()) {
            throw new NoGeneratedPlaylistsException(NO_PLAYLISTS_GENERATED_BY_THIS_USER_ERROR_MESSAGE);
        }
        return playlists;
    }

    @Override
    public Iterable<Playlist> getByTitle(String title) {
        Iterable<Playlist> playlists = playlistRepository.findAllByIsDeletedFalseAndTitle(title);
        if (!playlists.iterator().hasNext()) {
            throw new NoGeneratedPlaylistsException(NO_PLAYLISTS_GENERATED_WITH_SUCH_TITLE_ERROR_MESSAGE);
        }
        return playlists;
    }
}
